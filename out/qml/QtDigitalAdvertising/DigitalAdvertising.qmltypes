import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable QtDigitalAdvertising 1.1 C:\Projects\QDA\QDA\build-tqtc-qtdigitaladvertising-Desktop_Qt_5_15_9_MSVC2019_64bit-Debug\qml'

Module {
    dependencies: [
        "QtMultimedia 5.13",
        "QtQml 2.15",
        "QtQml.Models 2.15",
        "QtQml.WorkerScript 2.15",
        "QtQuick 2.2"
    ]
    Component {
        name: "QAbstractAdvertisement"
        prototype: "QObject"
        exports: ["QtDigitalAdvertising/QtDigitalAdvertising 1.1"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Enum {
            name: "DisplayMode"
            values: {
                "SingleShot": 0,
                "Loop": 1
            }
        }
        Enum {
            name: "PlayMode"
            values: {
                "AutoPlay": 0,
                "OnRequest": 1,
                "OnIdle": 2
            }
        }
        Enum {
            name: "QdaMediaType"
            values: {
                "Image": 0,
                "Html": 1,
                "Video": 2,
                "Audio": 3,
                "Invalid": 4
            }
        }
        Property { name: "currentMediaType"; type: "QdaMediaType" }
        Property { name: "currentMediaUrl"; type: "string" }
        Signal { name: "adParamsLoaded" }
        Signal {
            name: "adStarted"
            Parameter { name: "duration"; type: "int" }
        }
        Signal { name: "adEnded" }
        Signal {
            name: "adError"
            Parameter { name: "error"; type: "string" }
        }
        Method { name: "requestAd" }
        Method { name: "stopAds" }
        Method { name: "stopAd" }
        Method { name: "analytics"; type: "bool" }
        Method { name: "qtAccountId"; type: "string" }
        Method { name: "qdaApiKey"; type: "string" }
    }
    Component {
        name: "QAbstractVideoFilter"
        prototype: "QObject"
        Property { name: "active"; type: "bool" }
    }
    Component {
        name: "QAbstractVideoSurface"
        prototype: "QObject"
        Property { name: "nativeResolution"; type: "QSize"; isReadonly: true }
        Signal {
            name: "activeChanged"
            Parameter { name: "active"; type: "bool" }
        }
        Signal {
            name: "surfaceFormatChanged"
            Parameter { name: "format"; type: "QVideoSurfaceFormat" }
        }
        Signal { name: "supportedFormatsChanged" }
        Signal {
            name: "nativeResolutionChanged"
            Parameter { name: "resolution"; type: "QSize" }
        }
    }
    Component {
        name: "QDeclarativeMediaMetaData"
        prototype: "QObject"
        Property { name: "title"; type: "QVariant" }
        Property { name: "subTitle"; type: "QVariant" }
        Property { name: "author"; type: "QVariant" }
        Property { name: "comment"; type: "QVariant" }
        Property { name: "description"; type: "QVariant" }
        Property { name: "category"; type: "QVariant" }
        Property { name: "genre"; type: "QVariant" }
        Property { name: "year"; type: "QVariant" }
        Property { name: "date"; type: "QVariant" }
        Property { name: "userRating"; type: "QVariant" }
        Property { name: "keywords"; type: "QVariant" }
        Property { name: "language"; type: "QVariant" }
        Property { name: "publisher"; type: "QVariant" }
        Property { name: "copyright"; type: "QVariant" }
        Property { name: "parentalRating"; type: "QVariant" }
        Property { name: "ratingOrganization"; type: "QVariant" }
        Property { name: "size"; type: "QVariant" }
        Property { name: "mediaType"; type: "QVariant" }
        Property { name: "duration"; type: "QVariant" }
        Property { name: "audioBitRate"; type: "QVariant" }
        Property { name: "audioCodec"; type: "QVariant" }
        Property { name: "averageLevel"; type: "QVariant" }
        Property { name: "channelCount"; type: "QVariant" }
        Property { name: "peakValue"; type: "QVariant" }
        Property { name: "sampleRate"; type: "QVariant" }
        Property { name: "albumTitle"; type: "QVariant" }
        Property { name: "albumArtist"; type: "QVariant" }
        Property { name: "contributingArtist"; type: "QVariant" }
        Property { name: "composer"; type: "QVariant" }
        Property { name: "conductor"; type: "QVariant" }
        Property { name: "lyrics"; type: "QVariant" }
        Property { name: "mood"; type: "QVariant" }
        Property { name: "trackNumber"; type: "QVariant" }
        Property { name: "trackCount"; type: "QVariant" }
        Property { name: "coverArtUrlSmall"; type: "QVariant" }
        Property { name: "coverArtUrlLarge"; type: "QVariant" }
        Property { name: "resolution"; type: "QVariant" }
        Property { name: "pixelAspectRatio"; type: "QVariant" }
        Property { name: "videoFrameRate"; type: "QVariant" }
        Property { name: "videoBitRate"; type: "QVariant" }
        Property { name: "videoCodec"; type: "QVariant" }
        Property { name: "posterUrl"; type: "QVariant" }
        Property { name: "chapterNumber"; type: "QVariant" }
        Property { name: "director"; type: "QVariant" }
        Property { name: "leadPerformer"; type: "QVariant" }
        Property { name: "writer"; type: "QVariant" }
        Property { name: "cameraManufacturer"; type: "QVariant" }
        Property { name: "cameraModel"; type: "QVariant" }
        Property { name: "event"; type: "QVariant" }
        Property { name: "subject"; type: "QVariant" }
        Property { name: "orientation"; type: "QVariant" }
        Property { name: "exposureTime"; type: "QVariant" }
        Property { name: "fNumber"; type: "QVariant" }
        Property { name: "exposureProgram"; type: "QVariant" }
        Property { name: "isoSpeedRatings"; type: "QVariant" }
        Property { name: "exposureBiasValue"; type: "QVariant" }
        Property { name: "dateTimeOriginal"; type: "QVariant" }
        Property { name: "dateTimeDigitized"; type: "QVariant" }
        Property { name: "subjectDistance"; type: "QVariant" }
        Property { name: "meteringMode"; type: "QVariant" }
        Property { name: "lightSource"; type: "QVariant" }
        Property { name: "flash"; type: "QVariant" }
        Property { name: "focalLength"; type: "QVariant" }
        Property { name: "exposureMode"; type: "QVariant" }
        Property { name: "whiteBalance"; type: "QVariant" }
        Property { name: "digitalZoomRatio"; type: "QVariant" }
        Property { name: "focalLengthIn35mmFilm"; type: "QVariant" }
        Property { name: "sceneCaptureType"; type: "QVariant" }
        Property { name: "gainControl"; type: "QVariant" }
        Property { name: "contrast"; type: "QVariant" }
        Property { name: "saturation"; type: "QVariant" }
        Property { name: "sharpness"; type: "QVariant" }
        Property { name: "deviceSettingDescription"; type: "QVariant" }
        Property { name: "gpsLatitude"; type: "QVariant" }
        Property { name: "gpsLongitude"; type: "QVariant" }
        Property { name: "gpsAltitude"; type: "QVariant" }
        Property { name: "gpsTimeStamp"; type: "QVariant" }
        Property { name: "gpsSatellites"; type: "QVariant" }
        Property { name: "gpsStatus"; type: "QVariant" }
        Property { name: "gpsDOP"; type: "QVariant" }
        Property { name: "gpsSpeed"; type: "QVariant" }
        Property { name: "gpsTrack"; type: "QVariant" }
        Property { name: "gpsTrackRef"; type: "QVariant" }
        Property { name: "gpsImgDirection"; type: "QVariant" }
        Property { name: "gpsImgDirectionRef"; type: "QVariant" }
        Property { name: "gpsMapDatum"; type: "QVariant" }
        Property { name: "gpsProcessingMethod"; type: "QVariant" }
        Property { name: "gpsAreaInformation"; type: "QVariant" }
        Signal { name: "metaDataChanged" }
    }
    Component {
        name: "QEmbeddedConfig"
        prototype: "QObject"
        exports: ["QtDigitalAdvertising/QEmbeddedConfig 1.1"]
        exportMetaObjectRevisions: [0]
        Property { name: "venueId"; type: "string" }
        Property { name: "qdaApiKey"; type: "string" }
        Property { name: "windowsPreferredMultimediaPlugin"; type: "string" }
    }
    Component {
        name: "QIdleStateListener"
        prototype: "QObject"
        exports: ["QtDigitalAdvertising/QIdleStateListener 1.1"]
        exportMetaObjectRevisions: [0]
        Property { name: "idleState"; type: "bool" }
        Method { name: "stopListening" }
        Method {
            name: "listenTo"
            Parameter { name: "inactivityTimer"; type: "int" }
        }
    }
    Component {
        name: "QMobileConfig"
        prototype: "QObject"
        exports: ["QtDigitalAdvertising/QMobileConfig 1.1"]
        exportMetaObjectRevisions: [0]
        Property { name: "qdaApiKey"; type: "string" }
        Property { name: "siteId"; type: "string" }
        Property { name: "networkId"; type: "string" }
        Property { name: "appName"; type: "string" }
        Property { name: "bundleId"; type: "string" }
        Property { name: "windowsPreferredMultimediaPlugin"; type: "string" }
        Property { name: "dnt"; type: "bool" }
        Method { name: "requestTrackingAuthorization" }
    }
    Component {
        name: "QSmart"
        prototype: "QAbstractAdvertisement"
        exports: ["QtDigitalAdvertising/QMobileBackend 1.1"]
        exportMetaObjectRevisions: [0]
        Property { name: "pageId"; type: "string" }
        Property { name: "formatId"; type: "string" }
        Property { name: "directMediaUrl"; type: "string" }
        Property { name: "clickUrl"; type: "string" }
        Property { name: "userAgentInfo"; type: "string" }
        Signal {
            name: "adResponse"
            Parameter { name: "resp"; type: "QNetworkReply"; isPointer: true }
        }
        Method { name: "getDirectMediaUrl"; type: "string" }
        Method { name: "getClickUrl"; type: "string" }
        Method { name: "hitPixelUrl" }
        Method { name: "hitPixelClickUrl" }
    }
    Component {
        name: "QVistar"
        prototype: "QAbstractAdvertisement"
        exports: ["QtDigitalAdvertising/QEmbeddedBackend 1.1"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "SupportedApplicationFormats"
            values: {
                "x_shockwave_dynamic_flash": 0,
                "x_shockwave_flash": 1
            }
        }
        Enum {
            name: "SupportedAudioFormats"
            values: {
                "Aac": 0,
                "Audio_mpeg": 1
            }
        }
        Enum {
            name: "SupportedImageFormats"
            values: {
                "Jpeg": 0,
                "Png": 1
            }
        }
        Enum {
            name: "SupportedVideoFormats"
            values: {
                "Mp4": 0,
                "Mpeg": 1,
                "Mpg": 2,
                "Quicktime": 3,
                "Webm": 4,
                "X_flvx_flv": 5,
                "X_ms_wmv": 6,
                "X_msvideo": 7
            }
        }
        Property { name: "mediaWidth"; type: "int" }
        Property { name: "mediaHeight"; type: "int" }
        Property { name: "deviceId"; type: "string" }
        Property { name: "displayTime"; type: "string" }
        Property { name: "configFileLocation"; type: "string" }
        Property { name: "id"; type: "string" }
        Property { name: "height"; type: "int" }
        Property { name: "width"; type: "int" }
        Property { name: "minDuration"; type: "int" }
        Property { name: "maxDuration"; type: "int" }
        Property { name: "staticDuration"; type: "int" }
        Property { name: "allowAudio"; type: "bool" }
        Property { name: "orderId"; type: "string" }
        Property { name: "maxFileSizeBytes"; type: "int" }
        Property { name: "latitude"; type: "float" }
        Property { name: "longitude"; type: "float" }
        Property { name: "adPropertiesId"; type: "string" }
        Property { name: "supportedApplicationFormats"; type: "string" }
        Property { name: "supportedAudioFormats"; type: "string" }
        Property { name: "supportedImageFormats"; type: "string" }
        Property { name: "supportedVideoFormats"; type: "string" }
        Property { name: "lastImpressions"; type: "double" }
        Property { name: "lastMediaCost"; type: "double" }
        Signal {
            name: "audienceUpdated"
            Parameter { name: "audienceInfo"; type: "string" }
        }
        Signal {
            name: "adResponse"
            Parameter { name: "resp"; type: "QNetworkReply"; isPointer: true }
        }
        Signal {
            name: "popRespone"
            Parameter { name: "resp"; type: "QNetworkReply"; isPointer: true }
        }
        Method { name: "reloadAdProperties" }
        Method { name: "update" }
    }
    Component {
        prototype: "QQuickItem"
        name: "QtDigitalAdvertising/Analitics 1.1"
        exports: ["QtDigitalAdvertising/Analitics 1.1"]
        exportMetaObjectRevisions: [1]
        isComposite: true
        defaultProperty: "data"
        Property { name: "analytics"; type: "bool" }
        Property { name: "qtAccountId"; type: "string" }
        Property { name: "qdaApiKey"; type: "string" }
        Property { name: "email"; type: "string" }
        Method {
            name: "sendEvent"
            type: "QVariant"
            Parameter { name: "event"; type: "QVariant" }
        }
        Method {
            name: "sendEventToPostHog"
            type: "QVariant"
            Parameter { name: "event"; type: "QVariant" }
            Parameter { name: "msg"; type: "QVariant" }
            Parameter { name: "platfrom"; type: "QVariant" }
            Parameter { name: "displayMode"; type: "QVariant" }
            Parameter { name: "playMode"; type: "QVariant" }
        }
    }
    Component {
        prototype: "QQuickItem"
        name: "QtDigitalAdvertising/BaseAdBackend 1.1"
        exports: ["QtDigitalAdvertising/BaseAdBackend 1.1"]
        exportMetaObjectRevisions: [1]
        isComposite: true
        defaultProperty: "data"
        Signal { name: "adStarted" }
        Signal { name: "adEnded" }
        Signal { name: "adClicked" }
        Signal {
            name: "adError"
            Parameter { name: "error"; type: "string" }
        }
        Signal {
            name: "audienceUpdated"
            Parameter { name: "audienceInfo"; type: "string" }
        }
        Method {
            name: "moveToTop"
            type: "QVariant"
            Parameter { name: "object"; type: "QVariant" }
        }
        Method { name: "play"; type: "QVariant" }
        Method { name: "stop"; type: "QVariant" }
    }
    Component {
        prototype: "QQuickItem"
        name: "QtDigitalAdvertising/EmbeddedConfig 1.1"
        exports: ["QtDigitalAdvertising/EmbeddedConfig 1.1"]
        exportMetaObjectRevisions: [1]
        isComposite: true
        defaultProperty: "data"
        Property { name: "qdaApiKey"; type: "string" }
        Property { name: "venueId"; type: "string" }
        Property { name: "windowsPreferredMultimediaPlugin"; type: "string" }
    }
    Component {
        prototype: "QQuickItem"
        name: "QtDigitalAdvertising/MobileConfig 1.0"
        exports: ["QtDigitalAdvertising/MobileConfig 1.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "qdaApiKey"; type: "string" }
        Property { name: "dnt"; type: "bool" }
        Property { name: "networkId"; type: "string" }
        Property { name: "siteId"; type: "string" }
        Property { name: "appName"; type: "string" }
        Property { name: "bundleId"; type: "string" }
        Property { name: "windowsPreferredMultimediaPlugin"; type: "string" }
        Method { name: "requestTrackingAuthorization"; type: "QVariant" }
    }
    Component {
        prototype: "QQuickItem"
        name: "QtDigitalAdvertising/PluginBackend 1.1"
        exports: ["QtDigitalAdvertising/PluginBackend 1.1"]
        exportMetaObjectRevisions: [1]
        isComposite: true
        defaultProperty: "data"
        Property { name: "playMode"; type: "int" }
        Property { name: "displayMode"; type: "int" }
        Property { name: "inactivityTime"; type: "int" }
        Property { name: "isPlaying"; type: "bool" }
        Property { name: "currentMediaType"; type: "string" }
        Property { name: "isMobile"; type: "bool" }
        Method { name: "play"; type: "QVariant" }
        Method { name: "stop"; type: "QVariant" }
        Method { name: "updateAdv"; type: "QVariant" }
        Method {
            name: "sendAnaliticsEvent"
            type: "QVariant"
            Parameter { name: "event"; type: "QVariant" }
            Parameter { name: "msg"; type: "QVariant" }
        }
        Method {
            name: "_openImage"
            type: "QVariant"
            Parameter { name: "path"; type: "QVariant" }
        }
        Method {
            name: "_openVideo"
            type: "QVariant"
            Parameter { name: "path"; type: "QVariant" }
        }
        Method {
            name: "_openWebPage"
            type: "QVariant"
            Parameter { name: "path"; type: "QVariant" }
        }
        Method { name: "_updateSource"; type: "QVariant" }
    }
    Component {
        prototype: "QQuickItem"
        name: "QtDigitalAdvertising/QEmbeddedAd 1.1"
        exports: ["QtDigitalAdvertising/QEmbeddedAd 1.1"]
        exportMetaObjectRevisions: [1]
        isComposite: true
        defaultProperty: "data"
        Property { name: "currentMediaType"; type: "string" }
        Property { name: "playMode"; type: "int" }
        Property { name: "inactivityTime"; type: "int" }
        Property { name: "displayMode"; type: "int" }
        Property { name: "mediaWidth"; type: "int" }
        Property { name: "mediaHeight"; type: "int" }
        Property { name: "deviceId"; type: "string" }
        Property { name: "displayAreaId"; type: "string" }
        Property { name: "minDuration"; type: "int" }
        Property { name: "maxDuration"; type: "int" }
        Property { name: "staticDuration"; type: "int" }
        Property { name: "allowAudio"; type: "bool" }
        Property { name: "orderId"; type: "string" }
        Property { name: "maxFileSizeBytes"; type: "int" }
        Property { name: "latitude"; type: "float" }
        Property { name: "longitude"; type: "float" }
        Property { name: "lastImpressions"; type: "double" }
        Property { name: "lastMediaCost"; type: "double" }
        Property { name: "supportedImageFormats"; type: "string" }
        Property { name: "supportedVideoFormats"; type: "string" }
        Property { name: "adPropertiesId"; type: "string" }
        Signal { name: "adStarted" }
        Signal { name: "adEnded" }
        Signal { name: "adClicked" }
        Signal {
            name: "adError"
            Parameter { name: "error"; type: "string" }
        }
        Signal {
            name: "audienceUpdated"
            Parameter { name: "audienceInfo"; type: "string" }
        }
        Method {
            name: "moveToTop"
            type: "QVariant"
            Parameter { name: "object"; type: "QVariant" }
        }
        Method { name: "play"; type: "QVariant" }
        Method { name: "stop"; type: "QVariant" }
    }
    Component {
        prototype: "QQuickItem"
        name: "QtDigitalAdvertising/QMobileAd 1.1"
        exports: ["QtDigitalAdvertising/QMobileAd 1.1"]
        exportMetaObjectRevisions: [1]
        isComposite: true
        defaultProperty: "data"
        Property { name: "playMode"; type: "int" }
        Property { name: "inactivityTime"; type: "int" }
        Property { name: "displayMode"; type: "int" }
        Property { name: "pageId"; type: "string" }
        Property { name: "formatId"; type: "string" }
        Property { name: "userAgentInfo"; type: "string" }
        Signal { name: "adStarted" }
        Signal { name: "adEnded" }
        Signal { name: "adClicked" }
        Signal {
            name: "adError"
            Parameter { name: "error"; type: "string" }
        }
        Signal {
            name: "audienceUpdated"
            Parameter { name: "audienceInfo"; type: "string" }
        }
        Method {
            name: "moveToTop"
            type: "QVariant"
            Parameter { name: "object"; type: "QVariant" }
        }
        Method { name: "play"; type: "QVariant" }
        Method { name: "stop"; type: "QVariant" }
    }
}
